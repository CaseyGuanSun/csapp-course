0x000:                      | 	.pos 0
0x000: 30f40001000000000000 | 	irmovq stack,%rsp
0x00a: 803800000000000000   | 	call main
0x013: 00                   | 	halt
                            | 
0x018:                      | 	.align 8
0x018:                      | array:
0x018: ffffffffffffffff     | 	.quad	0xffffffffffffffff
0x020: feffffffffffffff     | 	.quad	0xfffffffffffffffe
0x028: fdffffffffffffff     | 	.quad	0xfffffffffffffffd
0x030: fcffffffffffffff     | 	.quad	0xfffffffffffffffc
                            | 
0x038:                      | main:	
0x038: 30f71800000000000000 | 	irmovq	array,%rdi
0x042: 30f60400000000000000 | 	irmovq	$4,%rsi
0x04c: 805600000000000000   | 	call	abssum
0x055: 90                   | 	ret
                            | 
0x056:                      | abssum:
0x056: 30f80800000000000000 | 	irmovq	$8, %r8
0x060: 30f90100000000000000 | 	irmovq	$1, %r9
0x06a: 6300                 | 	xorq	%rax, %rax
0x06c: 6266                 | 	andq	%rsi,%rsi
0x06e: 709700000000000000   | 	jmp		test
0x077:                      | loop:
0x077: 30fa0000000000000000 | 	irmovq	$0,%r10		
0x081: 50b70000000000000000 | 	mrmovq	(%rdi),%r11		
0x08b: 6087                 | 	addq	%r8,%rdi		 # start++
0x08d: 61ba                 | 	subq	%r11,%r10		 # If *start < 0 ,set %r10 = abs(*start);
0x08f: 62bb                 | 	andq	%r11,%r11		 # Set CC
0x091: 22ab                 | 	cmovl	%r10,%r11		 # Move if *start < 0
0x093: 60b0                 | 	addq	%r11,%rax		 # Sum + abs(*start)
0x095: 6196                 | 	subq	%r9,%rsi		 # count-- ,Set CC
0x097:                      | test:
0x097: 767700000000000000   | 	jg		loop			 # Stop if count == 0
0x0a0: 90                   | 	ret
                            | 	
0x100:                      | 	.pos 0x100
0x100:                      | stack:
