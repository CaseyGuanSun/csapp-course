                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4f807000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f67805000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f76803000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq	%rax,%rax		# count = 0;
0x034: 30f80100000000000000 | 	irmovq	$1,%r8
0x03e: 707d01000000000000   | 	jmp 		test10
                            | 
0x047:                      | loop10:
0x047: 50a70000000000000000 | 	mrmovq	(%rdi),%r10
0x051: 200b                 | 	rrmovq	%rax,%r11
0x053: 608b                 | 	addq	%r8,%r11
0x055: 40a60000000000000000 | 	rmmovq	%r10,(%rsi)
0x05f: 62aa                 | 	andq	%r10,%r10
0x061: 26b0                 | 	cmovg	%r11,%rax
0x063: 50a70800000000000000 | 	mrmovq	8(%rdi),%r10
0x06d: 200b                 | 	rrmovq	%rax,%r11
0x06f: 608b                 | 	addq	%r8,%r11
0x071: 40a60800000000000000 | 	rmmovq	%r10,8(%rsi)
0x07b: 62aa                 | 	andq	%r10,%r10
0x07d: 26b0                 | 	cmovg	%r11,%rax
0x07f: 50a71000000000000000 | 	mrmovq	16(%rdi),%r10
0x089: 200b                 | 	rrmovq	%rax,%r11
0x08b: 608b                 | 	addq	%r8,%r11
0x08d: 40a61000000000000000 | 	rmmovq	%r10,16(%rsi)
0x097: 62aa                 | 	andq	%r10,%r10
0x099: 26b0                 | 	cmovg	%r11,%rax
0x09b: 50a71800000000000000 | 	mrmovq	24(%rdi),%r10
0x0a5: 200b                 | 	rrmovq	%rax,%r11
0x0a7: 608b                 | 	addq	%r8,%r11
0x0a9: 40a61800000000000000 | 	rmmovq	%r10,24(%rsi)
0x0b3: 62aa                 | 	andq	%r10,%r10
0x0b5: 26b0                 | 	cmovg	%r11,%rax
0x0b7: 50a72000000000000000 | 	mrmovq	32(%rdi),%r10
0x0c1: 200b                 | 	rrmovq	%rax,%r11
0x0c3: 608b                 | 	addq	%r8,%r11
0x0c5: 40a62000000000000000 | 	rmmovq	%r10,32(%rsi)
0x0cf: 62aa                 | 	andq	%r10,%r10
0x0d1: 26b0                 | 	cmovg	%r11,%rax
0x0d3: 50a72800000000000000 | 	mrmovq	40(%rdi),%r10
0x0dd: 200b                 | 	rrmovq	%rax,%r11
0x0df: 608b                 | 	addq	%r8,%r11
0x0e1: 40a62800000000000000 | 	rmmovq	%r10,40(%rsi)
0x0eb: 62aa                 | 	andq	%r10,%r10
0x0ed: 26b0                 | 	cmovg	%r11,%rax
0x0ef: 50a73000000000000000 | 	mrmovq	48(%rdi),%r10
0x0f9: 200b                 | 	rrmovq	%rax,%r11
0x0fb: 608b                 | 	addq	%r8,%r11
0x0fd: 40a63000000000000000 | 	rmmovq	%r10,48(%rsi)
0x107: 62aa                 | 	andq	%r10,%r10
0x109: 26b0                 | 	cmovg	%r11,%rax
0x10b: 50a73800000000000000 | 	mrmovq	56(%rdi),%r10
0x115: 200b                 | 	rrmovq	%rax,%r11
0x117: 608b                 | 	addq	%r8,%r11
0x119: 40a63800000000000000 | 	rmmovq	%r10,56(%rsi)
0x123: 62aa                 | 	andq	%r10,%r10
0x125: 26b0                 | 	cmovg	%r11,%rax
0x127: 50a74000000000000000 | 	mrmovq	64(%rdi),%r10
0x131: 200b                 | 	rrmovq	%rax,%r11
0x133: 608b                 | 	addq	%r8,%r11
0x135: 40a64000000000000000 | 	rmmovq	%r10,64(%rsi)
0x13f: 62aa                 | 	andq	%r10,%r10
0x141: 26b0                 | 	cmovg	%r11,%rax
0x143: 50a74800000000000000 | 	mrmovq	72(%rdi),%r10
0x14d: 200b                 | 	rrmovq	%rax,%r11
0x14f: 608b                 | 	addq	%r8,%r11
0x151: 40a64800000000000000 | 	rmmovq	%r10,72(%rsi)
0x15b: 62aa                 | 	andq	%r10,%r10
0x15d: 26b0                 | 	cmovg	%r11,%rax
                            | 	
0x15f: c0f75000000000000000 | 	iaddq	$80,%rdi
0x169: c0f65000000000000000 | 	iaddq	$80,%rsi
0x173: c0f2f6ffffffffffffff | 	iaddq	$-10,%rdx
                            | 	
0x17d:                      | test10:
0x17d: 30fb0a00000000000000 | 	irmovq	$10,%r11
0x187: 612b                 | 	subq	%rdx,%r11
0x189: 714700000000000000   | 	jle		loop10
                            | 	
                            | 	
                            | 	
0x192:                      | test5:
0x192: 30fb0400000000000000 | 	irmovq	$4,%r11
0x19c: 612b                 | 	subq	%rdx,%r11
0x19e: 755102000000000000   | 	jge		loop3
0x1a7: 50a70000000000000000 | 	mrmovq	(%rdi),%r10
0x1b1: 200b                 | 	rrmovq	%rax,%r11
0x1b3: 608b                 | 	addq	%r8,%r11
0x1b5: 40a60000000000000000 | 	rmmovq	%r10,(%rsi)
0x1bf: 62aa                 | 	andq	%r10,%r10
0x1c1: 26b0                 | 	cmovg	%r11,%rax
0x1c3: 50a70800000000000000 | 	mrmovq	8(%rdi),%r10
0x1cd: 200b                 | 	rrmovq	%rax,%r11
0x1cf: 608b                 | 	addq	%r8,%r11
0x1d1: 40a60800000000000000 | 	rmmovq	%r10,8(%rsi)
0x1db: 62aa                 | 	andq	%r10,%r10
0x1dd: 26b0                 | 	cmovg	%r11,%rax
0x1df: 50a71000000000000000 | 	mrmovq	16(%rdi),%r10
0x1e9: 200b                 | 	rrmovq	%rax,%r11
0x1eb: 608b                 | 	addq	%r8,%r11
0x1ed: 40a61000000000000000 | 	rmmovq	%r10,16(%rsi)
0x1f7: 62aa                 | 	andq	%r10,%r10
0x1f9: 26b0                 | 	cmovg	%r11,%rax
0x1fb: 50a71800000000000000 | 	mrmovq	24(%rdi),%r10
0x205: 200b                 | 	rrmovq	%rax,%r11
0x207: 608b                 | 	addq	%r8,%r11
0x209: 40a61800000000000000 | 	rmmovq	%r10,24(%rsi)
0x213: 62aa                 | 	andq	%r10,%r10
0x215: 26b0                 | 	cmovg	%r11,%rax
0x217: 50a72000000000000000 | 	mrmovq	32(%rdi),%r10
0x221: 200b                 | 	rrmovq	%rax,%r11
0x223: 608b                 | 	addq	%r8,%r11
0x225: 40a62000000000000000 | 	rmmovq	%r10,32(%rsi)
0x22f: 62aa                 | 	andq	%r10,%r10
0x231: 26b0                 | 	cmovg	%r11,%rax
                            | 	
0x233: c0f72800000000000000 | 	iaddq	$40,%rdi
0x23d: c0f62800000000000000 | 	iaddq	$40,%rsi
0x247: c0f2fbffffffffffffff | 	iaddq	$-5,%rdx
                            | 	
                            | 
                            | 	
                            | 	
0x251:                      | loop3:
0x251: 30fb0300000000000000 | 	irmovq	$3,%r11
0x25b: 612b                 | 	subq	%rdx,%r11
0x25d: 76d802000000000000   | 	jg		loop2
0x266: 50a70000000000000000 | 	mrmovq	(%rdi),%r10
0x270: 200b                 | 	rrmovq	%rax,%r11
0x272: 608b                 | 	addq	%r8,%r11
0x274: 40a60000000000000000 | 	rmmovq	%r10,(%rsi)
0x27e: 62aa                 | 	andq	%r10,%r10
0x280: 26b0                 | 	cmovg	%r11,%rax
0x282: 50a70800000000000000 | 	mrmovq	8(%rdi),%r10
0x28c: 200b                 | 	rrmovq	%rax,%r11
0x28e: 608b                 | 	addq	%r8,%r11
0x290: 40a60800000000000000 | 	rmmovq	%r10,8(%rsi)
0x29a: 62aa                 | 	andq	%r10,%r10
0x29c: 26b0                 | 	cmovg	%r11,%rax
0x29e: 50a71000000000000000 | 	mrmovq	16(%rdi),%r10
0x2a8: 200b                 | 	rrmovq	%rax,%r11
0x2aa: 608b                 | 	addq	%r8,%r11
0x2ac: 40a61000000000000000 | 	rmmovq	%r10,16(%rsi)
0x2b6: 62aa                 | 	andq	%r10,%r10
0x2b8: 26b0                 | 	cmovg	%r11,%rax
                            | 	
0x2ba: c0f71800000000000000 | 	iaddq	$24,%rdi
0x2c4: c0f61800000000000000 | 	iaddq	$24,%rsi
0x2ce: c0f2fdffffffffffffff | 	iaddq	$-3,%rdx
                            | 
0x2d8:                      | loop2:
0x2d8: c0f2feffffffffffffff | 	iaddq	$-2,%rdx
0x2e2: 724003000000000000   | 	jl		loop1		
0x2eb: 50a70000000000000000 | 	mrmovq	(%rdi),%r10
0x2f5: 200b                 | 	rrmovq	%rax,%r11
0x2f7: 608b                 | 	addq	%r8,%r11
0x2f9: 40a60000000000000000 | 	rmmovq	%r10,(%rsi)
0x303: 62aa                 | 	andq	%r10,%r10
0x305: 26b0                 | 	cmovg	%r11,%rax
0x307: 50a70800000000000000 | 	mrmovq	8(%rdi),%r10
0x311: 200b                 | 	rrmovq	%rax,%r11
0x313: 608b                 | 	addq	%r8,%r11
0x315: 40a60800000000000000 | 	rmmovq	%r10,8(%rsi)
0x31f: 62aa                 | 	andq	%r10,%r10
0x321: 26b0                 | 	cmovg	%r11,%rax
                            | 	
                            | 	
0x323: c0f71000000000000000 | 	iaddq	$16,%rdi
0x32d: c0f61000000000000000 | 	iaddq	$16,%rsi
                            | 	
0x337: 706703000000000000   | 	jmp		Done
                            | 
0x340:                      | loop1:
0x340: 6082                 | 	addq	%r8,%rdx
0x342: 726703000000000000   | 	jl		Done
0x34b: 50a70000000000000000 | 	mrmovq	(%rdi),%r10
0x355: 2001                 | 	rrmovq	%rax,%rcx
0x357: 6081                 | 	addq	%r8,%rcx
0x359: 40a60000000000000000 | 	rmmovq	%r10,(%rsi)
0x363: 62aa                 | 	andq	%r10,%r10
0x365: 2610                 | 	cmovg	%rcx,%rax
                            | 	
                            |       
                            | 	
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x367:                      | Done:
0x367: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x368:                      | End:
                            | #/* $end ncopy-ys */
0x368:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x368:                      | 	.align 8
0x368:                      | src:
0x368: ffffffffffffffff     | 	.quad -1
0x370: feffffffffffffff     | 	.quad -2
0x378: fdffffffffffffff     | 	.quad -3
0x380: fcffffffffffffff     | 	.quad -4
0x388: 0500000000000000     | 	.quad 5
0x390: faffffffffffffff     | 	.quad -6
0x398: 0700000000000000     | 	.quad 7
0x3a0: f8ffffffffffffff     | 	.quad -8
0x3a8: 0900000000000000     | 	.quad 9
0x3b0: 0a00000000000000     | 	.quad 10
0x3b8: 0b00000000000000     | 	.quad 11
0x3c0: f4ffffffffffffff     | 	.quad -12
0x3c8: f3ffffffffffffff     | 	.quad -13
0x3d0: f2ffffffffffffff     | 	.quad -14
0x3d8: f1ffffffffffffff     | 	.quad -15
0x3e0: 1000000000000000     | 	.quad 16
0x3e8: 1100000000000000     | 	.quad 17
0x3f0: 1200000000000000     | 	.quad 18
0x3f8: 1300000000000000     | 	.quad 19
0x400: ecffffffffffffff     | 	.quad -20
0x408: ebffffffffffffff     | 	.quad -21
0x410: eaffffffffffffff     | 	.quad -22
0x418: e9ffffffffffffff     | 	.quad -23
0x420: e8ffffffffffffff     | 	.quad -24
0x428: e7ffffffffffffff     | 	.quad -25
0x430: e6ffffffffffffff     | 	.quad -26
0x438: e5ffffffffffffff     | 	.quad -27
0x440: 1c00000000000000     | 	.quad 28
0x448: 1d00000000000000     | 	.quad 29
0x450: 1e00000000000000     | 	.quad 30
0x458: e1ffffffffffffff     | 	.quad -31
0x460: e0ffffffffffffff     | 	.quad -32
0x468: 2100000000000000     | 	.quad 33
0x470: 2200000000000000     | 	.quad 34
0x478: ddffffffffffffff     | 	.quad -35
0x480: 2400000000000000     | 	.quad 36
0x488: 2500000000000000     | 	.quad 37
0x490: 2600000000000000     | 	.quad 38
0x498: d9ffffffffffffff     | 	.quad -39
0x4a0: d8ffffffffffffff     | 	.quad -40
0x4a8: d7ffffffffffffff     | 	.quad -41
0x4b0: d6ffffffffffffff     | 	.quad -42
0x4b8: d5ffffffffffffff     | 	.quad -43
0x4c0: 2c00000000000000     | 	.quad 44
0x4c8: 2d00000000000000     | 	.quad 45
0x4d0: 2e00000000000000     | 	.quad 46
0x4d8: 2f00000000000000     | 	.quad 47
0x4e0: 3000000000000000     | 	.quad 48
0x4e8: 3100000000000000     | 	.quad 49
0x4f0: ceffffffffffffff     | 	.quad -50
0x4f8: 3300000000000000     | 	.quad 51
0x500: ccffffffffffffff     | 	.quad -52
0x508: cbffffffffffffff     | 	.quad -53
0x510: 3600000000000000     | 	.quad 54
0x518: 3700000000000000     | 	.quad 55
0x520: c8ffffffffffffff     | 	.quad -56
0x528: 3900000000000000     | 	.quad 57
0x530: c6ffffffffffffff     | 	.quad -58
0x538: 3b00000000000000     | 	.quad 59
0x540: 3c00000000000000     | 	.quad 60
0x548: 3d00000000000000     | 	.quad 61
0x550: c2ffffffffffffff     | 	.quad -62
0x558: 3f00000000000000     | 	.quad 63
0x560: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x570:                      | 	.align 16
0x570:                      | Predest:
0x570: fadebc0000000000     | 	.quad 0xbcdefa
0x578:                      | dest:
0x578: abefcd0000000000     | 	.quad 0xcdefab
0x580: abefcd0000000000     | 	.quad 0xcdefab
0x588: abefcd0000000000     | 	.quad 0xcdefab
0x590: abefcd0000000000     | 	.quad 0xcdefab
0x598: abefcd0000000000     | 	.quad 0xcdefab
0x5a0: abefcd0000000000     | 	.quad 0xcdefab
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0: abefcd0000000000     | 	.quad 0xcdefab
0x5d8: abefcd0000000000     | 	.quad 0xcdefab
0x5e0: abefcd0000000000     | 	.quad 0xcdefab
0x5e8: abefcd0000000000     | 	.quad 0xcdefab
0x5f0: abefcd0000000000     | 	.quad 0xcdefab
0x5f8: abefcd0000000000     | 	.quad 0xcdefab
0x600: abefcd0000000000     | 	.quad 0xcdefab
0x608: abefcd0000000000     | 	.quad 0xcdefab
0x610: abefcd0000000000     | 	.quad 0xcdefab
0x618: abefcd0000000000     | 	.quad 0xcdefab
0x620: abefcd0000000000     | 	.quad 0xcdefab
0x628: abefcd0000000000     | 	.quad 0xcdefab
0x630: abefcd0000000000     | 	.quad 0xcdefab
0x638: abefcd0000000000     | 	.quad 0xcdefab
0x640: abefcd0000000000     | 	.quad 0xcdefab
0x648: abefcd0000000000     | 	.quad 0xcdefab
0x650: abefcd0000000000     | 	.quad 0xcdefab
0x658: abefcd0000000000     | 	.quad 0xcdefab
0x660: abefcd0000000000     | 	.quad 0xcdefab
0x668: abefcd0000000000     | 	.quad 0xcdefab
0x670: abefcd0000000000     | 	.quad 0xcdefab
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690: abefcd0000000000     | 	.quad 0xcdefab
0x698: abefcd0000000000     | 	.quad 0xcdefab
0x6a0: abefcd0000000000     | 	.quad 0xcdefab
0x6a8: abefcd0000000000     | 	.quad 0xcdefab
0x6b0: abefcd0000000000     | 	.quad 0xcdefab
0x6b8: abefcd0000000000     | 	.quad 0xcdefab
0x6c0: abefcd0000000000     | 	.quad 0xcdefab
0x6c8: abefcd0000000000     | 	.quad 0xcdefab
0x6d0: abefcd0000000000     | 	.quad 0xcdefab
0x6d8: abefcd0000000000     | 	.quad 0xcdefab
0x6e0: abefcd0000000000     | 	.quad 0xcdefab
0x6e8: abefcd0000000000     | 	.quad 0xcdefab
0x6f0: abefcd0000000000     | 	.quad 0xcdefab
0x6f8: abefcd0000000000     | 	.quad 0xcdefab
0x700: abefcd0000000000     | 	.quad 0xcdefab
0x708: abefcd0000000000     | 	.quad 0xcdefab
0x710: abefcd0000000000     | 	.quad 0xcdefab
0x718: abefcd0000000000     | 	.quad 0xcdefab
0x720: abefcd0000000000     | 	.quad 0xcdefab
0x728: abefcd0000000000     | 	.quad 0xcdefab
0x730: abefcd0000000000     | 	.quad 0xcdefab
0x738: abefcd0000000000     | 	.quad 0xcdefab
0x740: abefcd0000000000     | 	.quad 0xcdefab
0x748: abefcd0000000000     | 	.quad 0xcdefab
0x750: abefcd0000000000     | 	.quad 0xcdefab
0x758: abefcd0000000000     | 	.quad 0xcdefab
0x760: abefcd0000000000     | 	.quad 0xcdefab
0x768: abefcd0000000000     | 	.quad 0xcdefab
0x770:                      | Postdest:
0x770: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x778:                      | .align 8
                            | # Run time stack
0x778: 0000000000000000     | 	.quad 0
0x780: 0000000000000000     | 	.quad 0
0x788: 0000000000000000     | 	.quad 0
0x790: 0000000000000000     | 	.quad 0
0x798: 0000000000000000     | 	.quad 0
0x7a0: 0000000000000000     | 	.quad 0
0x7a8: 0000000000000000     | 	.quad 0
0x7b0: 0000000000000000     | 	.quad 0
0x7b8: 0000000000000000     | 	.quad 0
0x7c0: 0000000000000000     | 	.quad 0
0x7c8: 0000000000000000     | 	.quad 0
0x7d0: 0000000000000000     | 	.quad 0
0x7d8: 0000000000000000     | 	.quad 0
0x7e0: 0000000000000000     | 	.quad 0
0x7e8: 0000000000000000     | 	.quad 0
0x7f0: 0000000000000000     | 	.quad 0
                            | 
0x7f8:                      | Stack:
