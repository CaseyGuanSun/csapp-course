                            | #######################################################################
                            | # Test for copying block of size 2;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4a001000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20200000000000000 | 	irmovq $2, %rdx		# src and dst have 2 elements
0x014: 30f60801000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7e000000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt                    # should halt with 0xaaaa in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax,%rax		# count = 0;
0x034: 709900000000000000   | 	jmp	test
                            | 
0x03d:                      | Loop:	
0x03d: 50a70000000000000000 | 	mrmovq (%rdi), %r10	# read val from src...
0x047: 40a60000000000000000 | 	rmmovq %r10, (%rsi)	# ...and store it to dst
0x051: 50b70800000000000000 | 	mrmovq 8(%rdi), %r11 
0x05b: 40b60800000000000000 | 	rmmovq %r11,8(%rsi)
0x065: 2001                 | 	rrmovq %rax,%rcx
0x067: c0f10100000000000000 | 	iaddq  $1,%rcx
0x071: 62aa                 | 	andq   %r10,%r10
0x073: 2610                 | 	cmovg  %rcx,%rax
0x075: 2001                 | 	rrmovq %rax,%rcx
0x077: 62bb                 | 	andq   %r11,%r11
0x079: 2610                 | 	cmovg  %rcx,%rax
0x07b: c0f2feffffffffffffff | 	iaddq $-2, %rdx		# len=len-2
0x085: c0f71000000000000000 | 	iaddq $16, %rdi		# src=src+2
0x08f: c0f61000000000000000 | 	iaddq $16, %rsi		# dest=dst+2
0x099:                      | test:
0x099: 30f80100000000000000 | 	irmovq	1,%r8
0x0a3: 6128                 | 	subq %rdx, %r8		# len > 1?
0x0a5: 723d00000000000000   | 	jl Loop			# if so, goto Loop:
0x0ae:                      | rest:
0x0ae: 6222                 | 	andq %rdx,%rdx  # len == 0?
0x0b0: 73dd00000000000000   | 	je	Done
0x0b9: 50a70000000000000000 | 	mrmovq (%rdi),%r10
0x0c3: 40a60000000000000000 | 	rmmovq %r10,(%rsi)
0x0cd: 2001                 | 	rrmovq %rax,%rcx
0x0cf: c0f10100000000000000 | 	iaddq	$1,%rcx
0x0d9: 62aa                 | 	andq	%r10,%r10
0x0db: 2610                 | 	cmovg	%rcx,%rax
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x0dd:                      | Done:
0x0dd: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x0de:                      | End:
                            | #/* $end ncopy-ys */
0x0de:                      | EndFun:
                            | 
                            | # Source and destination blocks 
                            | ###############################
0x0e0:                      | 	.align 8
0x0e0:                      | src:
0x0e0: ffffffffffffffff     | 	.quad -1
0x0e8: 0100000000000000     | 	.quad -2
0x0f0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x100:                      | 	.align 16
0x100:                      | Predest:
0x100: fadebc0000000000     | 	.quad 0xbcdefa
0x108:                      | dest:
0x108: abefcd0000000000     | 	.quad 0xcdefab
0x110: abefcd0000000000     | 	.quad 0xcdefab
0x118:                      | Postdest:
0x118: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x120:                      | .align 8
                            | # Run time stack
0x120: 0000000000000000     | 	.quad 0
0x128: 0000000000000000     | 	.quad 0
0x130: 0000000000000000     | 	.quad 0
0x138: 0000000000000000     | 	.quad 0
0x140: 0000000000000000     | 	.quad 0
0x148: 0000000000000000     | 	.quad 0
0x150: 0000000000000000     | 	.quad 0
0x158: 0000000000000000     | 	.quad 0
0x160: 0000000000000000     | 	.quad 0
0x168: 0000000000000000     | 	.quad 0
0x170: 0000000000000000     | 	.quad 0
0x178: 0000000000000000     | 	.quad 0
0x180: 0000000000000000     | 	.quad 0
0x188: 0000000000000000     | 	.quad 0
0x190: 0000000000000000     | 	.quad 0
0x198: 0000000000000000     | 	.quad 0
                            | 
0x1a0:                      | Stack:
